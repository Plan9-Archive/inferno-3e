$AWK '
BEGIN{
		if(ARGC < 2)
			exit
}

/^$/{
		next;
}
/^#/{
		next;
}
collect && /^[^	\t]/{
		collect = 0;
}
collect && section ~ "dev"{
		dev[ndev++] = $1;
		if($1 ~ "vga")
			vga[nvga++] = "vgavga";
}
collect && section ~ "ip"{
		ip[nip++] = $1;
}
collect && (section ~ "ether" || section ~ "link") {
		link[nlink++] = $1;
}
collect && section ~ "mod"{
		mod[nmod++] = $1;
}
collect && section ~ "vga"{
		option = 0;
		for(i = 2; i < NF; i++){
			if($i ~ "[+]hwgc"){
				hwgc[nhwgc++] = $1;
				option = 1;
			} else if($i ~ "[+=]hwgc"){
				hwgc[nhwgc++] = $1;
				if(option == 0)
					option = 2;
			}
		}
		if(option < 2)
			vga[nvga++] = $1;
}
collect && section ~ "misc"{
		misc[nmisc++] = $1;
		if($1 ~ "arch.*")
			arch[narch++] = $1;
		else if($1 ~ ".*\.root"){
			x = substr($1, 1, index($1, ".")-1);
			if(x ~ "(dossrv|kfs)")
				x = "fs";
			fs[nfs++] = x;
		}
}
collect && section ~ "port"{
		port[nport++] = $0;
}
collect && section ~ "code"{
		code[ncode++] = $0;
}
$0 ~ /^[^ \t]/{
		if($0 ~ "(code|dev|ether|ip|lib|link|mod|misc|port|root|vga)"){
			section = $0;
			collect = 1;
		}
		next;
}

END{
		if(ARGC < 2)
			exit "usage"

		printf "#include <lib9.h>\n"
		printf "#include \"dat.h\"\n"
		printf "#include \"fns.h\"\n"
		printf "#include \"mem.h\"\n"
		printf "#include \"image.h\"\n"
		printf "#include \"../port/error.h\"\n"
		printf "#include \"interp.h\"\n\n"

		for(i = 0; i < nlink; i++)
			printf "extern void %slink(void);\n", link[i];

		printf "void links(void){\n";
		for(i = 0; i < nfs; i++)
			printf "\taddrootfile(\"%s\", %scode, %slen);\n", fs[i], fs[i], fs[i];
		for(i = 0; i < nlink; i++)
			printf "\t%slink();\n", link[i];
		printf "}\n\n";
		printf("void initmods(void){\n");
		for(i = 0; i < nmod; i++)
			printf("\t%smodinit();\n",mod[i]);
		printf("}\n\n");
	
		if(nip){
			printf "#include \"../ip/ip.h\"\n";
			for(i = 0; i < nip; i++)
				printf "extern void %sinit(Fs*);\n", ip[i];
			printf "void (*ipprotoinit[])(Fs*) = {\n";
			for(i = 0; i < nip; i++)
				printf "\t%sinit,\n", ip[i];
			printf "\tnil,\n};\n\n";
		}

		if(narch){
			for(i = 0; i < narch; i++)
				printf "extern PCArch %s;\n", arch[i];
		  	printf "PCArch* knownarch[] = {\n";
		  	for(i = 0; i < narch; i++)
				printf "\t&%s,\n", arch[i];
		  	printf "\tnil,\n};\n\n";
		}

		if(nvga){
			printf "#include <memimage.h>\n"
			printf "#include \"vga.h\"\n"
			for(i = 0; i < nvga; i++)
				printf "extern Vgac %s;\n", vga[i];
		  	printf "Vgac* knownvga[] = {\n";
		  	for(i = 0; i < nvga; i++)
				printf "\t&%s,\n", vga[i];
		  	printf "\tnil,\n};\n\n";
		}

		if(nhwgc){
			for(i = 0; i < nhwgc; i++)
				printf "extern Hwgc %shwgc;\n", hwgc[i];
		  	printf "Hwgc* knownhwgc[] = {\n";
		  	for(i = 0; i < nhwgc; i++)
				printf "\t&%shwgc,\n", hwgc[i];
		  	printf "\tnil,\n};\n\n";
		}

		for(i = 0; i < ncode; i++)
			printf "%s\n", code[i];

		printf "char* conffile = \"%s\";\n", ARGV[1];
		printf "ulong kerndate = KERNDATE;\n";

		exit
}' $*
