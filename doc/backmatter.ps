%!PS
%
% Center pages, based on pageheight and pagewidth, and redefine showpage
% to put cropmarks at each corner. Device dependent code to expand the
% paper size goes in procedure expandpagesize. Currently only supports
% a Linotronic 200P typesetter using 12 inch wide paper. You'll have to
% add code to expandpagesize to support different typesetters or even a
% 200P that's running differently.
%

/CropmarkDict 40 dict dup begin

/expandpage true def
/magnification 1 def
/pageheight 11.0 def
/pagewidth 8.5 def
/scaletofit false def
/scaling 1 def

/marklength .3 def	% inches
/markstart .125 def	% inches
/markend .04 def	% inches
/marklinewidth .25 def	% points

/inch {72 mul} def
/min {2 copy gt {exch} if pop} def
/max {2 copy lt {exch} if pop} def

/setup {
	/markspace markstart marklength add markend add inch marklinewidth add def
	/totalheight pageheight inch markspace 2 mul add def
	/totalwidth pagewidth inch markspace 2 mul add def

	pagedimensions
	checkpagesize
	/scaling getscaling def
	xcenter ycenter translate
	scaling scaling scale
	pagewidth inch 2 div neg pageheight inch 2 div neg translate
	clippage
} def

/pagedimensions {
	clippath pathbbox newpath
	4 -1 roll exch 4 1 roll 4 copy
	sub /width exch def
	sub /height exch def
	add 2 div /xcenter exch def
	add 2 div /ycenter exch def
} def

/checkpagesize {
	height totalheight lt width totalwidth lt or expandpage and {
		expandpagesize
		pagedimensions
	} if
} def

/expandpagesize {	% device dependent code
	/Product statusdict begin /product where {pop product}{()} ifelse end def

	Product (Linotype) eq {		% Linotronic 200P and other models?
		statusdict /setpageparams known {
			/maxwidth 12.0 inch def		% 12 inch wide paper?
			totalheight maxwidth le {
				totalheight
				totalwidth
				maxwidth totalheight sub 2 div
				0
			}{
				totalwidth maxwidth min
				totalheight
				maxwidth totalwidth maxwidth min sub 2 div
				1
			} ifelse
			statusdict /setpageparams get exec
		} if
	} if
} def

/getscaling {
	scaletofit
		{height totalheight div width totalwidth div min 1 min}
		{1}
	ifelse
} def

/clippage {
	newpath
	0 0 moveto
	pagewidth inch 0 rlineto
	0 pageheight inch rlineto
	pagewidth neg inch 0 rlineto
	closepath clip
	newpath
} def

/cropmark {
	gsave
	translate
	rotate
	marklinewidth dup translate
	0 0 transform round exch round exch itransform translate
	markstart inch 0 moveto marklength inch 0 rlineto stroke
	0 markstart inch moveto 0 marklength inch rlineto stroke
	grestore
} bind def

/@PreviousShowpage /showpage load def

end def

%
% Cropmarks - in the default coordinate system.
%

/showpage {
	gsave
	CropmarkDict begin
		initgraphics
		marklinewidth setlinewidth
		xcenter ycenter translate
		scaling scaling scale
		0 pagewidth inch 2 div pageheight inch 2 div cropmark
		90 pagewidth inch neg 2 div pageheight inch 2 div cropmark
		180 pagewidth inch neg 2 div pageheight inch 2 div neg cropmark
		270 pagewidth inch 2 div pageheight inch 2 div neg cropmark
		@PreviousShowpage
	end
	grestore
} bind def

%%EndProlog
%%BeginSetup
CropmarkDict begin
/pageheight 10 def
/pagewidth 7 def
/expandpage false def
/scaletofit false def
/xoffset 0.0 def
/yoffset 0.0 def
setup
end
%%EndSetup
%!PS-Adobe-2.0
%%Version: 0.1
%%DocumentFonts: (atend)
%%Pages: (atend)
%%EndComments
%
% Version 3.3.2 prologue for troff files.
%

/#copies 1 store
/aspectratio 1 def
/formsperpage 1 def
/landscape false def
/linewidth .3 def
/magnification 1 def
/margin 0 def
/orientation 0 def
/resolution 720 def
/rotation 1 def
/xoffset 0 def
/yoffset 0 def

/roundpage true def
/useclippath true def
/pagebbox [0 0 612 792] def

/R  /Times-Roman def
/I  /Times-Italic def
/B  /Times-Bold def
/BI /Times-BoldItalic def
/H  /Helvetica def
/HI /Helvetica-Oblique def
/HB /Helvetica-Bold def
/HX /Helvetica-BoldOblique def
/CW /Courier def
/CO /Courier def
/CI /Courier-Oblique def
/CB /Courier-Bold def
/CX /Courier-BoldOblique def
/PA /Palatino-Roman def
/PI /Palatino-Italic def
/PB /Palatino-Bold def
/PX /Palatino-BoldItalic def
/Hr /Helvetica-Narrow def
/Hi /Helvetica-Narrow-Oblique def
/Hb /Helvetica-Narrow-Bold def
/Hx /Helvetica-Narrow-BoldOblique def
/KR /Bookman-Light def
/KI /Bookman-LightItalic def
/KB /Bookman-Demi def
/KX /Bookman-DemiItalic def
/AR /AvantGarde-Book def
/AI /AvantGarde-BookOblique def
/AB /AvantGarde-Demi def
/AX /AvantGarde-DemiOblique def
/NR /NewCenturySchlbk-Roman def
/NI /NewCenturySchlbk-Italic def
/NB /NewCenturySchlbk-Bold def
/NX /NewCenturySchlbk-BoldItalic def
/ZD /ZapfDingbats def
/ZI /ZapfChancery-MediumItalic def
/S  /S def
/S1 /S1 def
/GR /Symbol def

/inch {72 mul} bind def
/min {2 copy gt {exch} if pop} bind def

/show {{//show} 0 get exec} bind def	% so later references don't bind
/widthshow {{//widthshow} 0 get exec} bind def
/stringwidth {{//stringwidth} 0 get exec} bind def

/setup {
	counttomark 2 idiv {def} repeat pop

	landscape {/orientation 90 orientation add def} if
	/scaling 72 resolution div def
	linewidth setlinewidth
	1 setlinecap

	pagedimensions
	xcenter ycenter translate
	orientation rotation mul rotate
	width 2 div neg height 2 div translate
	xoffset inch yoffset inch neg translate
	margin 2 div dup neg translate
	magnification dup aspectratio mul scale
	scaling scaling scale

	addmetrics
	0 0 moveto
} def

/pagedimensions {
	useclippath userdict /gotpagebbox known not and {
		/pagebbox [clippath pathbbox newpath] def
		roundpage currentdict /roundpagebbox known and {roundpagebbox} if
	} if
	pagebbox aload pop
	4 -1 roll exch 4 1 roll 4 copy
	landscape {4 2 roll} if
	sub /width exch def
	sub /height exch def
	add 2 div /xcenter exch def
	add 2 div /ycenter exch def
	userdict /gotpagebbox true put
} def

/addmetrics {
	/Symbol /S null Sdefs cf
	/Times-Roman /S1 StandardEncoding dup length array copy S1defs cf
} def

/pagesetup {
	/page exch def
	currentdict /pagedict known currentdict page known and {
		page load pagedict exch get cvx exec
	} if
} def

/decodingdefs [
	{counttomark 2 idiv {y moveto show} repeat}
	{neg /y exch def counttomark 2 idiv {y moveto show} repeat}
	{neg moveto {2 index stringwidth pop sub exch div 0 32 4 -1 roll widthshow} repeat}
	{neg moveto {spacewidth sub 0.0 32 4 -1 roll widthshow} repeat}
	{counttomark 2 idiv {y moveto show} repeat}
	{neg setfunnytext}
] def

/setdecoding {/t decodingdefs 3 -1 roll get bind def} bind def

/w {neg moveto show} bind def
/m {neg dup /y exch def moveto} bind def
/done {/lastpage where {pop lastpage} if} def

/f {
	dup /font exch def findfont exch
	dup /ptsize exch def scaling div dup /size exch def scalefont setfont
	linewidth ptsize mul scaling 10 mul div setlinewidth
	/spacewidth ( ) stringwidth pop def
} bind def

/changefont {
	/fontheight exch def
	/fontslant exch def
	currentfont [
		1 0
		fontheight ptsize div fontslant sin mul fontslant cos div
		fontheight ptsize div
		0 0
	] makefont setfont
} bind def

/sf {f} bind def

/cf {
	dup length 2 idiv
	/entries exch def
	/chtab exch def
	/newencoding exch def
	/newfont exch def

	findfont dup length 1 add dict
	/newdict exch def
	{1 index /FID ne {newdict 3 1 roll put}{pop pop} ifelse} forall

	newencoding type /arraytype eq {newdict /Encoding newencoding put} if

	newdict /Metrics entries dict put
	newdict /Metrics get
	begin
		chtab aload pop
		1 1 entries {pop def} for
		newfont newdict definefont pop
	end
} bind def

%
% A few arrays used to adjust reference points and character widths in some
% of the printer resident fonts. If square roots are too high try changing
% the lines describing /radical and /radicalex to,
%
%	/radical	[0 -75 550 0]
%	/radicalex	[-50 -75 500 0]
%
% Move braceleftbt a bit - default PostScript character is off a bit.
%

/Sdefs [
	/bracketlefttp		[201 500]
	/bracketleftbt		[201 500]
	/bracketrighttp		[-81 380]
	/bracketrightbt		[-83 380]
	/braceleftbt		[203 490]
	/bracketrightex		[220 -125 500 0]
	/radical		[0 0 550 0]
	/radicalex		[-50 0 500 0]
	/parenleftex		[-20 -170 0 0]
	/integral		[100 -50 500 0]
	/infinity		[10 -75 730 0]
] def

/S1defs [
	/underscore		[0 80 500 0]
	/endash			[7 90 650 0]
] def
%
% Tries to round clipping path dimensions, as stored in array pagebbox, so they
% match one of the known sizes in the papersizes array. Lower left coordinates
% are always set to 0.
%

/roundpagebbox {
    7 dict begin
	/papersizes [8.5 inch 11 inch 14 inch 17 inch] def

	/mappapersize {
		/val exch def
		/slop .5 inch def
		/diff slop def
		/j 0 def
		0 1 papersizes length 1 sub {
			/i exch def
			papersizes i get val sub abs
			dup diff le {/diff exch def /j i def} {pop} ifelse
		} for
		diff slop lt {papersizes j get} {val} ifelse
	} def

	pagebbox 0 0 put
	pagebbox 1 0 put
	pagebbox dup 2 get mappapersize 2 exch put
	pagebbox dup 3 get mappapersize 3 exch put
    end
} bind def

%%EndProlog
%%BeginSetup
mark
%
% Encoding vector and redefinition of findfont for the ISO Latin1 standard.
% The 18 characters missing from ROM based fonts on older printers are noted
% below.
%

/ISOLatin1Encoding [
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/space
	/exclam
	/quotedbl
	/numbersign
	/dollar
	/percent
	/ampersand
	/quoteright
	/parenleft
	/parenright
	/asterisk
	/plus
	/comma
	/minus
	/period
	/slash
	/zero
	/one
	/two
	/three
	/four
	/five
	/six
	/seven
	/eight
	/nine
	/colon
	/semicolon
	/less
	/equal
	/greater
	/question
	/at
	/A
	/B
	/C
	/D
	/E
	/F
	/G
	/H
	/I
	/J
	/K
	/L
	/M
	/N
	/O
	/P
	/Q
	/R
	/S
	/T
	/U
	/V
	/W
	/X
	/Y
	/Z
	/bracketleft
	/backslash
	/bracketright
	/asciicircum
	/underscore
	/quoteleft
	/a
	/b
	/c
	/d
	/e
	/f
	/g
	/h
	/i
	/j
	/k
	/l
	/m
	/n
	/o
	/p
	/q
	/r
	/s
	/t
	/u
	/v
	/w
	/x
	/y
	/z
	/braceleft
	/bar
	/braceright
	/asciitilde
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/.notdef
	/dotlessi
	/grave
	/acute
	/circumflex
	/tilde
	/macron
	/breve
	/dotaccent
	/dieresis
	/.notdef
	/ring
	/cedilla
	/.notdef
	/hungarumlaut
	/ogonek
	/caron
	/space
	/exclamdown
	/cent
	/sterling
	/currency
	/yen
	/brokenbar		% missing
	/section
	/dieresis
	/copyright
	/ordfeminine
	/guillemotleft
	/logicalnot
	/hyphen
	/registered
	/macron
	/degree			% missing
	/plusminus		% missing
	/twosuperior		% missing
	/threesuperior		% missing
	/acute
	/mu			% missing
	/paragraph
	/periodcentered
	/cedilla
	/onesuperior		% missing
	/ordmasculine
	/guillemotright
	/onequarter		% missing
	/onehalf		% missing
	/threequarters		% missing
	/questiondown
	/Agrave
	/Aacute
	/Acircumflex
	/Atilde
	/Adieresis
	/Aring
	/AE
	/Ccedilla
	/Egrave
	/Eacute
	/Ecircumflex
	/Edieresis
	/Igrave
	/Iacute
	/Icircumflex
	/Idieresis
	/Eth			% missing
	/Ntilde
	/Ograve
	/Oacute
	/Ocircumflex
	/Otilde
	/Odieresis
	/multiply		% missing
	/Oslash
	/Ugrave
	/Uacute
	/Ucircumflex
	/Udieresis
	/Yacute			% missing
	/Thorn			% missing
	/germandbls
	/agrave
	/aacute
	/acircumflex
	/atilde
	/adieresis
	/aring
	/ae
	/ccedilla
	/egrave
	/eacute
	/ecircumflex
	/edieresis
	/igrave
	/iacute
	/icircumflex
	/idieresis
	/eth			% missing
	/ntilde
	/ograve
	/oacute
	/ocircumflex
	/otilde
	/odieresis
	/divide			% missing
	/oslash
	/ugrave
	/uacute
	/ucircumflex
	/udieresis
	/yacute			% missing
	/thorn			% missing
	/ydieresis
] def

/NewFontDirectory FontDirectory maxlength dict def

%
% Apparently no guarantee findfont is defined in systemdict so the obvious
%
%	systemdict /findfont get exec
%
% can generate an error. So far the only exception is a VT600 (version 48.0).
%

userdict /@RealFindfont known not {
	userdict begin
		/@RealFindfont systemdict begin /findfont load end def
	end
} if

/findfont {
	dup NewFontDirectory exch known not {
		dup
		%dup systemdict /findfont get exec	% not always in systemdict
		dup userdict /@RealFindfont get exec
		dup /Encoding get StandardEncoding eq {
			dup length dict begin
				{1 index /FID ne {def}{pop pop} ifelse} forall
				/Encoding ISOLatin1Encoding def
				currentdict
			end
			/DummyFontName exch definefont
		} if
		NewFontDirectory 3 1 roll put
	} if
	NewFontDirectory exch get
} bind def

%%Patch from lp
%%EndPatch from lp

setup
%%EndSetup
%%Page: 1 1
/saveobj save def
mark
1 pagesetup
cleartomark
showpage
saveobj restore
%%EndPage: 1 1
%%Page: 2 2
/saveobj save def
mark
2 pagesetup
20 /LucidaSansUnicode00 f
(Notes) 2241 470 w
cleartomark
showpage
saveobj restore
%%EndPage: 2 2
%%Page: 3 3
/saveobj save def
mark
3 pagesetup
20 /LucidaSansUnicode00 f
(Notes) 2241 470 w
cleartomark
showpage
saveobj restore
%%EndPage: 3 3
%%Page: 4 4
/saveobj save def
mark
4 pagesetup
9 /LucidaSansUnicode00 f
(This) 828 2280 w
(book) 1042 2280 w
(was) 1290 2280 w
(typeset) 1484 2280 w
(by) 1829 2280 w
(the) 1962 2280 w
(authors) 2130 2280 w
(using) 2492 2280 w
8 /LucidaTypewriter f
(eqn) 1099 2520 w
(|) 1331 2520 w
(tbl) 1447 2520 w
(|) 1679 2520 w
(troff) 1795 2520 w
(-mpm) 2143 2520 w
(|) 2433 2520 w
(lp) 2549 2520 w
(-d) 2723 2520 w
(stdout) 2897 2520 w
(|) 3303 2520 w
(cropmarks) 3419 2520 w
9 /LucidaSansUnicode00 f
(The) 828 2760 w
(input) 1020 2760 w
(text) 1277 2760 w
(was) 1477 2760 w
(characters) 1671 2760 w
(from) 2151 2760 w
(the) 2389 2760 w
(Unicode) 2557 2760 w
(Standard) 2938 2760 w
(encoded) 3356 2760 w
(in) 3756 2760 w
(UTF-8.) 3867 2760 w
(The) 828 3000 w
(fonts) 1040 3000 w
(used) 1312 3000 w
(were) 1570 3000 w
(Lucida) 1825 3000 w
(Sans,) 2157 3000 w
(in) 2436 3000 w
(a) 2567 3000 w
(special) 2666 3000 w
(version) 3016 3000 w
(incorporating) 3383 3000 w
(over) 4023 3000 w
(1700) 828 3120 w
(characters) 1100 3120 w
(from) 1595 3120 w
(the) 1848 3120 w
(Unicode) 2031 3120 w
(Standard,) 2427 3120 w
(along) 2889 3120 w
(with) 3176 3120 w
(Lucida) 3404 3120 w
(Sans) 3731 3120 w
(Italic,) 3976 3120 w
(Lucida) 828 3240 w
(Sans) 1179 3240 w
(DemiBold,) 1448 3240 w
(and) 1963 3240 w
(Lucida) 2194 3240 w
(Typewriter,) 2545 3240 w
(designed) 3106 3240 w
(by) 3573 3240 w
(Bigelow) 3746 3240 w
(&) 4149 3240 w
(Holmes,) 828 3360 w
(Atherton,) 1232 3360 w
(California.) 1690 3360 w
(The) 2216 3360 w
(hinted) 2426 3360 w
(Adobe) 2751 3360 w
(Type) 3079 3360 w
(1) 3337 3360 w
(representation) 3441 3360 w
(of) 4124 3360 w
(the) 828 3480 w
(fonts) 1001 3480 w
(was) 1258 3480 w
(provided) 1457 3480 w
(by) 1877 3480 w
(Y&Y) 2016 3480 w
(Inc.,) 2226 3480 w
(45) 2447 3480 w
(Walden) 2596 3480 w
(Street,) 2947 3480 w
(Concord,) 3263 3480 w
(MA,) 3695 3480 w
(01742,) 3898 3480 w
(USA.) 828 3600 w
cleartomark
showpage
saveobj restore
%%EndPage: 4 4
%%Trailer
done
%%DocumentFonts: LucidaSansUnicode00 LucidaTypewriter
%%Pages: 4
